    post:
      tags:
        - DocumentReference Write
      description: |
        # Create Operations

      operationId: millenniumDSTU2DocumentReferenceCreate
      consumes:
      - application/json+fhir
      produces:
      - application/json+fhir
      parameters: 
        - name: createBody
          in: body
          required: true
          schema:
            $ref: "#/definitions/CreateBody"
      responses: 
        '200':
          description: |
            **OK**
          headers:
            X-Request-Id:
              type: string
              description: Oracle troubleshooting identifier.
            opc-request-id:
              type: string
              description: Oracle troubleshooting identifier.
            ETag:
              type: string
              description: The identifier for a specific version of a resource. This will be formatted as `W/"<etag_value>"` and is used to specify the `If-Match` header value on subsequent updates.
            Location:
              type: string
              description: |
                The URL location of the created entity.
                
                Example: `https://fhir-ehr-code.cerner.com/dstu2/ec2458f2-1e24-41c8-b71b-0e701af7583d/DocumentReference/642774`
        default:
          $ref: '#/responses/OperationOutcome'

definitions:
  CreateBody:
    type: object
    required:
    - resourceType
    - subject
    - type
    - indexed
    - status
    - content
    - content.attachment
    - content.attachment.contentType
    - content.attachment.data
    - context
    - context.encounter
    properties:
      resourceType:
        description: |
          The type of the FHIR resource
        type: string
        enum:
        - DocumentReference
      subject:
        description: |
          Who or what is the subject of the document.
          _Examples_
          
          ````json
          {
            "reference": "Patient/1234"
          }
          
          ````
          
        type: object
        properties:
          reference:
            type: string
      type:
        description: |
          Kind of document.
          
          _Notes_
          The type must include a LOINC or a proprietary coding. Multiple LOINC codings or a single proprietary coding can be provided. <br/><br/> When providing proprietary code system, it should be of format 'https://fhir.cerner.com/&lt;your EHR source id&gt;/codeSet/&lt;code set&gt;' (where code set is a Millennium code set). Example&#58; 'https://fhir.cerner.com/ec2458f2-1e24-41c8-b71b-0e701af7583d/codeSet/72'. <br/><br/> Please note that the <a href="#terminology-bindings">list in the terminology bindings section</a> is not the complete list mapped for our sandbox. Our sandbox has many codes, but we only document a few to provide examples. The list does not represent what would be mapped for one of our clientâ€™s domains. This is one of the things we evaluate and implement as needed when we are making apps available at client sites.
          
          _Examples_
          
          ````json
          {
            "coding": [
              {
                "system": "http://loinc.org",
                "code": "34840-9"
              }
            ]
          }
          
          ````
          
          ````json
          {
            "coding": [
              {
               "system": "https://fhir.cerner.com/ec2458f2-1e24-41c8-b71b-0e701af7583d/codeSet/72",
               "code": "2820583"
              }
            ]
           }
          
          ````
        type: object
        properties:
          text:
            type: string
          coding:
            type: array
            items:
              type: object
              properties:
                system:
                  type: string
                code:
                  type: string
      author:
        description: |
          Who and/or what authored the document
          
          _Notes_
          <ul>
            <li>At most one practitioner can be populated.</li>
            <li>If author is not provided, the author will be determined based on the access token.</li>
          </ul>
          
          
          _Examples_
          
          ````json
          {
            "author": [
              {
                "reference": "Practitioner/2150097"
              }
            ]
          }
          
          ````
          
        type: array
        items:
          type: object
          properties:
            reference:
              type: string
      indexed:
        description: |
          When this document reference was created
          _Examples_
          
          ````json
          {
            "indexed": "2015-05-16T091014Z"
          }
          
          ````
          
        type: string
      status:
        description: |
          The status of this document reference
          
          _Notes_
          Currently support <code>current</code> only
          
          _Examples_
          
          ````json
          {
            "status": "current"
          }
          
          ````
          
        type: string
      docStatus:
        description: |
          The status of underlying document
          
          _Notes_
          Currently support <code>final</code> only
          
          _Examples_
          
          ````json
          {
            "docStatus": {
              "coding": [
                {
                  "system": "http://hl7.org/fhir/composition-status",
                  "code": "final"
                }
              ]
            }
          }
          
          ````
          
        type: object
        properties:
          text:
            type: string
          coding:
            type: array
            items:
              type: object
              properties:
                system:
                  type: string
                code:
                  type: string
      description:
        description: |
          Human-readable description (title)
          _Examples_
          
          ````json
          {
            "description": "Rheumatology Note"
          }
          
          ````
          
        type: string
      content:
        description: |
          The referenced document
        type: array
        items:
          type: object
          properties:
            :
              type: 
            type: BackboneElement
      content.attachment:
        description: |
          An array of document contents. Must contain exactly 1 attachment.
          _Examples_
          
          ````json
          {
            "content": [
              {
                "attachment": {
                  "contentType": "application/xhtml+xml;charset=utf-8",
                  "data": "PCFET0NUWVBFIGh0bWwNCiAgU1lTVEVNI...&lt;snipped for brevity&gt;"
                }
              }
            ]
          }
          
          ````
          
        type: object
        description: The document or URL of the document along with critical metadata to prove content has integrity.
        required:
        - contentType
        - data
        properties:
          contentType:
            type: string
            description: Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes MIME type parameters such as charset where appropriate.
          data:
            type: string
            description: The actual data of the attachment - a sequence of bytes, base64 encoded.
          title:
            type: string
            description: A label or set of text to display in place of the data.
          creation:
            type: string
            description: The date that the attachment was first created.
      content.attachment.contentType:
        description: |
          Mime type of the content, with charset etc.
          
          _Notes_
          contentType must be 'application/xhtml+xml;charset=utf-8'
          
          _Examples_
          
          ````json
          {
            "content": [
              {
                "attachment": {
                  "contentType": "application/xhtml+xml;charset=utf-8"
                }
              }
            ]
          }
          
          ````
          
        type: string
      content.attachment.data:
        description: |
          Data inline, base64 encoded XHTML.
          
          _Notes_
          Please refer <a href="http://fhir.cerner.com/millennium/faq/common-issues/#posting-documents-using-documentreference-resource" target="_blank"> common issues </a> section for more info.
          
          
          _Examples_
          
          ````json
          {
            "content": [
              {
                "attachment": {
                  "data": "PCFET0NUWVBFIGh0bWwNCiAgU1lTVEVNI...&lt;snipped for brevity&gt;"
                }
              }
            ]
          }
          
          ````
          
        type: string
      context:
        description: |
          The clinical context in which the document was prepared
        type: BackboneElement
      context.encounter:
        description: |
          Context of the document content
          _Examples_
          
          ````json
          {
            "context": {
              "encounter": {
                "reference": "Encounter/4208053"
              }
            }
          }
          
          ````
          
        type: object
        properties:
          reference:
            type: string
      context.period:
        description: |
          When the documented service was performed.
          
          _Notes_
          If provided, the service time must be set to <code>context.period.end</code>. If not provided, the document will be stored with the indexed dateTime.
          
          
          _Examples_
          
          ````json
          {
            "context": {
              "period" : {
                "end": "2015-08-20T09:10:14Z"
              }
            }
          }
          
          ````
          
        type: object
        properties:
          start:
            type: string
          end:
            type: string